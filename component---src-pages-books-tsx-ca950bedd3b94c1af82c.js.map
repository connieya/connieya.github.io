{"version":3,"file":"component---src-pages-books-tsx-ca950bedd3b94c1af82c.js","mappings":"0JAyDA,UAnCkBA,IAOL,IANXC,MACEC,MACEC,cAAc,MAAEC,EAAK,YAAEC,EAAW,QAAEC,IAEtCC,mBAAqBC,MAAOC,KAExBT,EACN,MAAMU,EAAeD,EAAME,OACzBC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAiC,IAA5BC,EAAKC,YAAYC,SAEjC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPb,MAAO,GAAGA,WACVC,YAAaA,EACba,IAAK,GAAGZ,UACRa,MAAM,GAAEC,UAERC,EAAAA,EAAAA,MAACC,EAAgB,CAAAF,SAAA,EACfJ,EAAAA,EAAAA,KAACO,EAAY,CAAAH,SAAC,aACdJ,EAAAA,EAAAA,KAACQ,EAAc,CAAAJ,SAAC,kBAEhBJ,EAAAA,EAAAA,KAACS,EAAO,KAERT,EAAAA,EAAAA,KAACO,EAAY,CAAAH,SAAC,SACbV,EAAagB,OAAS,GACrBV,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACC,MAAOlB,KAEjBM,EAAAA,EAAAA,KAACa,EAAU,CAAAT,SAAC,0BASf,MAiCDE,GAAgBQ,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,gHAWhBV,GAAYO,EAAAA,EAAAA,GAAA,MAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,oDAMZT,GAAcM,EAAAA,EAAAA,GAAA,KAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,kDAMdR,GAAOK,EAAAA,EAAAA,GAAA,MAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,0DAMPJ,GAAUC,EAAAA,EAAAA,GAAA,KAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,sC","sources":["webpack://my-blog/./src/pages/books.tsx"],"sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Template from 'components/Common/Template'\nimport PostList from 'components/Post/PostList'\nimport { PostItem } from 'types/Post'\n\ntype Props = {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostItem[]\n    }\n  }\n}\n\nconst BooksPage = ({\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges: books },\n  },\n}: Props) => {\n  const visibleBooks = books.filter(\n    ({ node }) => node.frontmatter.deploy !== false,\n  )\n  return (\n    <Template\n      title={`${title} - 읽은 책`}\n      description={description}\n      url={`${siteUrl}/books`}\n      image=\"\"\n    >\n      <ContentContainer>\n        <SectionTitle>읽고 있는 책</SectionTitle>\n        <CurrentReading>레거시 코드 활용 전략</CurrentReading>\n\n        <Divider />\n\n        <SectionTitle>읽은 책</SectionTitle>\n        {visibleBooks.length > 0 ? (\n          <PostList posts={visibleBooks as any} />\n        ) : (\n          <EmptyState>아직 기록된 책이 없습니다.</EmptyState>\n        )}\n      </ContentContainer>\n    </Template>\n  )\n}\n\nexport default BooksPage\n\nexport const query = graphql`\n  query getBooksPageData {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      filter: { frontmatter: { categories: { in: [\"books\"] } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            deploy\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  max-width: 768px;\n  margin: 0 auto;\n  padding: 2rem 1rem;\n\n  @media (max-width: 768px) {\n    padding: 2rem 0.75rem;\n  }\n`\n\nconst SectionTitle = styled.h2`\n  font-size: 1.25rem;\n  margin: 0 0 0.75rem;\n  color: #333;\n`\n\nconst CurrentReading = styled.p`\n  font-size: 1.1rem;\n  margin: 0 0 1.5rem;\n  color: #444;\n`\n\nconst Divider = styled.hr`\n  border: none;\n  border-top: 1px solid #eee;\n  margin: 1.5rem 0;\n`\n\nconst EmptyState = styled.p`\n  font-size: 1rem;\n  color: #777;\n  margin: 0;\n`\n"],"names":["_ref","data","site","siteMetadata","title","description","siteUrl","allMarkdownRemark","edges","books","visibleBooks","filter","_ref2","node","frontmatter","deploy","_jsx","Template","url","image","children","_jsxs","ContentContainer","SectionTitle","CurrentReading","Divider","length","PostList","posts","EmptyState","_styled","target","name","styles"],"sourceRoot":""}