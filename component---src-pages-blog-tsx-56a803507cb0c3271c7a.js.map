{"version":3,"file":"component---src-pages-blog-tsx-56a803507cb0c3271c7a.js","mappings":"gJAyDA,UA3BaA,IASA,IARXC,YACAC,MACEC,MACEC,cAAc,MAAEC,EAAK,YAAEC,EAAW,QAAEC,IAEtCC,mBAAqBC,MAAOC,GAC5BC,MAAM,UAAEC,KAEJZ,EACN,MAAMa,EAAgBH,EAAMI,OAC1BC,IAAA,IAAAC,EAAA,IAAC,KAAEC,GAAMF,EAAA,QACqB,QAA5BC,EAACC,EAAKC,YAAYC,kBAAU,IAAAH,GAA3BA,EAA6BI,SAAS,YACX,IAA5BH,EAAKC,YAAYG,SAErB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPlB,MAAO,GAAGA,SACVC,YAAaA,EACbkB,IAAKjB,EACLkB,MAAOb,EAAUc,UAEjBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,CAACjB,MAAOG,M","sources":["webpack://my-blog/./src/pages/blog.tsx"],"sourcesContent":["import React from 'react'\nimport PostList from 'components/Post/PostList'\nimport { graphql } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport Template from 'components/Common/Template'\nimport { PostItem } from 'types/Post'\n\ntype Props = {\n  location: {\n    search: string\n    href: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostItem[]\n    }\n    file: {\n      childImageSharp: { gatsbyImageData: IGatsbyImageData }\n      publicURL: string\n    }\n  }\n}\n\nconst Blog = ({\n  location: {},\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges: posts },\n    file: { publicURL },\n  },\n}: Props) => {\n  const filteredPosts = posts.filter(\n    ({ node }) =>\n      !node.frontmatter.categories?.includes('books') &&\n      node.frontmatter.deploy !== false,\n  )\n  return (\n    <Template\n      title={`${title} - 개발`}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <PostList posts={filteredPosts as any} />\n    </Template>\n  )\n}\n\nexport default Blog\n\nexport const getBlogData = graphql`\n  query getBlogData {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            deploy\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`\n"],"names":["_ref","location","data","site","siteMetadata","title","description","siteUrl","allMarkdownRemark","edges","posts","file","publicURL","filteredPosts","filter","_ref2","_node$frontmatter$cat","node","frontmatter","categories","includes","deploy","_jsx","Template","url","image","children","PostList"],"sourceRoot":""}